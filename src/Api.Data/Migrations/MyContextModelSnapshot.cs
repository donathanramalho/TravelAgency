// <auto-generated />
using System;
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Api.Domain.Entities.BookingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BookingDate")
                        .HasMaxLength(10)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Entities.PackageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MunicipioDestino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MunicipioOrigem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UfEntityId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UfIdDestino")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UfIdOrigem")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("UfEntityId");

                    b.HasIndex("UfIdDestino");

                    b.HasIndex("UfIdOrigem");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Entities.PaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Entities.UfEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("UfEntity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b565bfdc-2741-4e88-83b7-9c1d21fc148f"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4665),
                            Nome = "Acre",
                            Sigla = "AC",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3ea98204-4ed9-43cb-9cde-111485afe732"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4693),
                            Nome = "Alagoas",
                            Sigla = "AL",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("542b965a-5fe5-4e0d-8f17-23d668b26248"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4696),
                            Nome = "Amazonas",
                            Sigla = "AM",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("efbf4f41-4133-404e-bde9-0516a91576d7"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4700),
                            Nome = "Amapá",
                            Sigla = "AP",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bf97ed9f-0147-4f1a-837b-5a12bd5c55a6"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4703),
                            Nome = "Bahia",
                            Sigla = "BA",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("08fb1856-941c-4782-bb82-dd6fdd3a2179"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4711),
                            Nome = "Ceará",
                            Sigla = "CE",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("44eedc4d-a27e-4401-ac9b-a27a667924cc"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4714),
                            Nome = "Distrito Federal",
                            Sigla = "DF",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("de4f52c4-e25b-40ea-9eff-4990be81e8c4"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4717),
                            Nome = "Espírito Santo",
                            Sigla = "ES",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("55879f97-068c-40e4-8f86-4ef874877b4f"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4720),
                            Nome = "Goiás",
                            Sigla = "GO",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8d69d13c-9f6e-472d-ad2a-0fd38d92a211"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4729),
                            Nome = "Maranhão",
                            Sigla = "MA",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f0a23bcf-8752-4a02-9323-68ce83d0fd74"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4732),
                            Nome = "Minas Gerais",
                            Sigla = "MG",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c6d4e591-b20a-4d12-a581-ee72d0da759a"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4734),
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("77ca71b7-3de6-41a0-a48b-6ed355cedf03"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4738),
                            Nome = "Mato Grosso",
                            Sigla = "MT",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ef8f0319-b44e-46c4-a35a-476c7426c4ec"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4741),
                            Nome = "Pará",
                            Sigla = "PA",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d71320ad-783c-4474-b10f-48906caa64ee"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4744),
                            Nome = "Paraíba",
                            Sigla = "PB",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("077287b0-98de-4726-9f10-12267712f8c4"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4747),
                            Nome = "Pernambuco",
                            Sigla = "PE",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e247cc51-087c-4058-82a8-37ed01cb1149"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4749),
                            Nome = "Piauí",
                            Sigla = "PI",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("85b39d38-ffdb-4289-aed9-7ed5ad09af92"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4756),
                            Nome = "Paraná",
                            Sigla = "PR",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3c39f56e-fbe8-4190-b35f-3cce709874c8"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4759),
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("169058b5-7bb6-4222-a93a-5956ae09d6ea"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4762),
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b2945332-5ee7-4029-aa3e-503a27ad52a0"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4765),
                            Nome = "Rondônia",
                            Sigla = "RO",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6c16e29a-ff39-4501-bed7-6e03c04e7fae"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4768),
                            Nome = "Roraima",
                            Sigla = "RR",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6c7b3e08-9179-4bb6-bd21-1fc057268590"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4771),
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("521c2477-9245-47ec-a917-6af162483adf"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4773),
                            Nome = "Santa Catarina",
                            Sigla = "SC",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f42777bf-25e1-441a-a6d3-61814a7944a6"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4776),
                            Nome = "Sergipe",
                            Sigla = "SE",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("774d005b-bf2d-4c73-b6c8-5e3b347d8fa1"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4782),
                            Nome = "São Paulo",
                            Sigla = "SP",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e3776188-8951-449c-80c0-b35e69184a1f"),
                            CreateAt = new DateTime(2024, 6, 27, 22, 33, 38, 280, DateTimeKind.Utc).AddTicks(4785),
                            Nome = "Tocantins",
                            Sigla = "TO",
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Api.Domain.Entities.BookingEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.PackageEntity", "PackageEntity")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserEntityId");

                    b.Navigation("PackageEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Api.Domain.Entities.PackageEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.UfEntity", null)
                        .WithMany("Packages")
                        .HasForeignKey("UfEntityId");

                    b.HasOne("Api.Domain.Entities.UfEntity", "UfDestino")
                        .WithMany()
                        .HasForeignKey("UfIdDestino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entities.UfEntity", "UfOrigem")
                        .WithMany()
                        .HasForeignKey("UfIdOrigem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UfDestino");

                    b.Navigation("UfOrigem");
                });

            modelBuilder.Entity("Api.Domain.Entities.PaymentEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.BookingEntity", "BookingEntity")
                        .WithMany()
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookingEntity");
                });

            modelBuilder.Entity("Api.Domain.Entities.UfEntity", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
